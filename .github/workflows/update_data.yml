name: Update Data and Org Files

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      GRIST_API_KEY: ${{ secrets.GRIST_API_KEY }}
      GRIST_DOC_ID: ${{ secrets.GRIST_DOC_ID }}
      ACTIONS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz sbcl libsqlite3-dev

      - name: Install Python dependencies
        run: |
          pip install requests PyGithub pandas sqlalchemy pydot

      - name: Update SQLite database and generate schema
        run: |
          python src/main.py

      - name: Install and setup Quicklisp
        run: |
          curl -O https://beta.quicklisp.org/quicklisp.lisp
          sbcl --load quicklisp.lisp \
               --eval '(quicklisp-quickstart:install :path "~/quicklisp/")' \
               --eval '(ql:add-to-init-file)' \
               --eval '(ql:update-client)' \
               --eval '(ql:update-all-dists)' \
               --eval '(ql:quickload "sqlite")' \
               --eval '(ql:quickload "cl-sqlite")' \
               --eval '(ql:quickload "cl-who")' \
               --eval '(quit)'
          echo '(let ((quicklisp-init (merge-pathnames "quicklisp/setup.lisp" (user-homedir-pathname))))
            (when (probe-file quicklisp-init)
              (load quicklisp-init)))' > ~/.sbclrc

      - name: Debug Quicklisp installation
        run: |
          ls -l ~/quicklisp
          cat ~/.sbclrc
          sbcl --non-interactive --eval '(print (ql:quickload :cl-sqlite))' --quit

      - name: Update Org files
        run: |
          export PATH=$PATH:/usr/local/bin
          sbcl --non-interactive \
               --load ~/.sbclrc \
               --load src/update_org_files.lisp

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/ org/
          git commit -m "Update data and Org files" || echo "No changes to commit"
          git push
